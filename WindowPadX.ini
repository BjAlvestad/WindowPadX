;
; See WindowPadX.html for more details about configuring WindowPadX.
;

[Options]
TitleMatchMode=2

RecenterMouse=1
; when the window is moved
RecenterOnlyIfOutside=1
; recenter only if the mouse is outside the window new position

;
; [Hotkeys]: Hotkeys which are active by default.
;   Hotkey sets using standard modifier keys such as
;     * Ctrl (^)
;     * Win (#)
;     * Alt (!)
;     * Shift (+)
;     * For more see: http://l.autohotkey.net/docs/Hotkeys.htm
;   should be placed directly in this section. 
;   [Hotkeys: NAME] sections must be enabled/disabled by a hotkey defined in this section.
;
[Hotkeys]
~RButton & LButton = WPXA_MouseLocator


; ------------------------------------------------------------------------------------------
; Custom modifier keys:
; CapsLock is not a default modifier (unlike ^, #, ! and +), and is thus defined here.
CapsLock = Hotkeys, Caps-Lock modifier
; ------------------------------------------------------------------------------------------
; ------------------------------------------------------------------------------------------

;
; [Hotkeys: xxx]: Hotkeys which are enabled/disabled via the Hotkeys command.
;                 These are typically used to implement custom modifier keys.
;
[Hotkeys: Caps-Lock modifier]
;Always On Top for active window
Tab = WPXA_TopToggle

;Transparancy on/off for active window
Space = WPXA_TransparentToggle

;Maximize on/off for active window
Enter = WPXA_MaximizeToggle

;Locks the mouse to active monitor (not allowed to leave the boarders)
; WARNING: Currently there is a bug so that it is not possible to switch it off again (or access start menu)
` = WPXA_ClipCursorToCurrentMonitorToggle

;Move mouse to center of monitor number:  CapsLock + Alt + #
!1 = WPXA_MoveMouseToMonitor, 1
!2 = WPXA_MoveMouseToMonitor, 2
!3 = WPXA_MoveMouseToMonitor, 3
!4 = WPXA_MoveMouseToMonitor, 4
!5 = WPXA_MoveMouseToMonitor, 5
!6 = WPXA_MoveMouseToMonitor, 6

;Move active window to monitor number:  CapsLock + #
1 = WPXA_MoveWindowToMonitor, 1
2 = WPXA_MoveWindowToMonitor, 2
3 = WPXA_MoveWindowToMonitor, 3
4 = WPXA_MoveWindowToMonitor, 4
5 = WPXA_MoveWindowToMonitor, 5
6 = WPXA_MoveWindowToMonitor, 6

;Move previous window to monitor number:  CapsLock + Shift + #
+1 = WPXA_MoveWindowToMonitor, 1, p
+2 = WPXA_MoveWindowToMonitor, 2, p
+3 = WPXA_MoveWindowToMonitor, 3, p
+4 = WPXA_MoveWindowToMonitor, 4, p
+5 = WPXA_MoveWindowToMonitor, 5, p
+6 = WPXA_MoveWindowToMonitor, 6, p

;Send ALL windows to monitor number:  CapsLock + Ctrl + Shift + #
^+1 = WPXA_GatherWindowsOnMonitor, 1
^+2 = WPXA_GatherWindowsOnMonitor, 2
^+3 = WPXA_GatherWindowsOnMonitor, 3
^+4 = WPXA_GatherWindowsOnMonitor, 4
^+5 = WPXA_GatherWindowsOnMonitor, 5
^+6 = WPXA_GatherWindowsOnMonitor, 6

; ... Superflous. To be repurposed to adjusting window position/size in increments
Left = WPXA_Move, -1,  0,  0.3, 1.0  ; currently not in use (superfluous)
Right = WPXA_Move, +1,  0,  0.7, 1.0  ; currently not in use (superfluous)
Up = WPXA_Move, 0, -1, 0.99, 0.5
Down = WPXA_Move, 0, +1, 0.99, 0.5



;####################################################################
;####           Window Placement on current monitor             #####
;####################################################################
;Command, HorizontalOffset, VerticalOffset, PercentageWidth, PercentageHeight
;??Note that offsets are for center of window??

;Place active window on edge L30-L50-R50-R70 (CapsLock) - Click twice to halve a windows size.
;Command, HorizontalOffset, VerticalOffset, PercentageWidth, PercentageHeight

; Upper Half due to -1 vertical offset and 0.5 percentage height
q = WPXA_Move, -1, -1,  0.3, 0.5
w = WPXA_Move, -1, -1,  0.5, 0.5
e = WPXA_Move, -1, -1,  0.7, 0.5
r = WPXA_Move,  0, -1,  1.0, 0.5
t = WPXA_Move, +1, -1,  0.7, 0.5
y = WPXA_Move, +1, -1,  0.5, 0.5
u = WPXA_Move, +1, -1,  0.3, 0.5

; Full Height due to 0 vertical offset and 1.0 percent height
a = WPXA_Move, -1, 0,  0.3, 1.0
s = WPXA_Move, -1, 0,  0.5, 1.0
d = WPXA_Move, -1, 0,  0.7, 1.0
f = WPXA_Move,  0, 0,  1.0, 1.0
g = WPXA_Move, +1, 0,  0.7, 1.0
h = WPXA_Move, +1, 0,  0.5, 1.0
j = WPXA_Move, +1, 0,  0.3, 1.0

; Lower Half due to +1 vertical offset and 0.5 percent height.
z = WPXA_Move, -1, +1,  0.3, 0.5
x = WPXA_Move, -1, +1,  0.5, 0.5
c = WPXA_Move, -1, +1,  0.7, 0.5
v = WPXA_Move,  0, +1,  1.0, 0.5
b = WPXA_Move, +1, +1,  0.7, 0.5
n = WPXA_Move, +1, +1,  0.5, 0.5
m = WPXA_Move, +1, +1,  0.3, 0.5

; Backup alternatives for full width top (r) and full with bottom (v)
; This alternative makes window slightly more narrow to avoid the issue of some windows jumping back (probably due to invisible borders fix).
r = WPXA_Move,  0, -1,  0.99, 0.5
v = WPXA_Move,  0, +1,  0.99, 0.5


;Place active window in inner positions. Hotkey: (CapsLock + Alt)
; e/d/c: (30)*20*(50),  r/f/v: (30)*40*(30),  t/g/b: (50)*20*(30)
;Command, HorizontalOffset, VerticalOffset, PercentageWidth, PercentageHeight

; Upper Half due to -1 vertical offset and 0.5 percentage height
!e = WPXA_Move, -0.25,  -1,  0.20, 0.5
!r = WPXA_Move,     0,  -1,  0.40, 0.5
!t = WPXA_Move, +0.25,  -1,  0.20, 0.5

; Full Height due to 0 vertical offset and 1.0 percent height
!d = WPXA_Move, -0.25,  0,  0.20, 1
!f = WPXA_Move,     0,  0,  0.40, 1
!g = WPXA_Move, +0.25,  0,  0.20, 1

; Lower Half due to +1 vertical offset and 0.5 percent height.
!c = WPXA_Move, -0.25, +1,  0.20, 0.5
!v = WPXA_Move, 0, +1,  0.40, 0.5
!b = WPXA_Move, +0.25, +1,  0.20, 0.5



;
; [Exclude Windows]: Hotkeys are disabled for these windows.
;
[Exclude Windows]
Window=Virtual PC
Window=Remote Desktop

;
; [Gather: Exclude Windows]: WPXA_GatherWindowsOnMonitor ignores these windows when gathering.
;
[Gather: Exclude Windows]
Window=ahk_class SideBar_AppBarWindow
Window=ahk_class SideBar_HTMLHostWindow
Window=ahk_class BasicWindow

; To prevent Windows 10 taskbar from getting moved with gather all command (ahk_class found with WindowSpy)
Window=ahk_class Shell_TrayWnd
Window=ahk_class Shell_SecondaryTrayWnd
Window=ahk_class Windows.UI.Core.CoreWindow

;
; [Gather: Exclude Processes]: WPXA_GatherWindowsOnMonitor ignores windows belonging to these processes.
;                              It is usually not necessary to use both this and the above.
;
[Gather: Exclude Processes]
; Process=sidebar.exe
Process=clocx.exe
